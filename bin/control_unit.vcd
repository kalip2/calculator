$date
	Tue Nov 14 18:39:54 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module control_unit_test $end
$var reg 4 ! button [3:0] $end
$var reg 1 " clock $end
$var reg 1 # is_pressed_next $end
$var reg 1 $ reset $end
$scope module dut $end
$var wire 4 % button [3:0] $end
$var wire 1 " clock $end
$var wire 1 & display $end
$var wire 1 ' is_clear $end
$var wire 1 ( is_equal $end
$var wire 1 ) is_number $end
$var wire 1 * is_op $end
$var wire 1 # is_pressed_next $end
$var wire 1 + next_initial $end
$var wire 1 , next_operandF $end
$var wire 1 - next_operandS $end
$var wire 1 . next_operation $end
$var wire 1 / next_result $end
$var wire 1 $ reset $end
$var wire 1 0 s_result $end
$var wire 1 1 s_operation $end
$var wire 1 2 s_operandS $end
$var wire 1 3 s_operandF $end
$var wire 1 4 s_initial $end
$var wire 1 5 is_pressed $end
$scope module fsInitial $end
$var wire 1 " clock $end
$var wire 1 + d $end
$var wire 1 6 enable $end
$var wire 1 7 reset $end
$var reg 1 4 q $end
$upscope $end
$scope module fsOperandF $end
$var wire 1 " clock $end
$var wire 1 , d $end
$var wire 1 8 enable $end
$var wire 1 9 reset $end
$var reg 1 3 q $end
$upscope $end
$scope module fsOperandS $end
$var wire 1 " clock $end
$var wire 1 - d $end
$var wire 1 : enable $end
$var wire 1 ; reset $end
$var reg 1 2 q $end
$upscope $end
$scope module fsOperation $end
$var wire 1 " clock $end
$var wire 1 . d $end
$var wire 1 < enable $end
$var wire 1 = reset $end
$var reg 1 1 q $end
$upscope $end
$scope module fsResult $end
$var wire 1 " clock $end
$var wire 1 / d $end
$var wire 1 > enable $end
$var wire 1 ? reset $end
$var reg 1 0 q $end
$upscope $end
$scope module is_pressed_state $end
$var wire 1 " clock $end
$var wire 1 # d $end
$var wire 1 @ enable $end
$var wire 1 A reset $end
$var reg 1 5 q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1A
0@
1?
0>
1=
0<
1;
0:
19
08
17
06
05
04
03
02
01
00
0/
0.
0-
0,
1+
0*
0)
0(
0'
z&
b0 %
1$
0#
0"
b0 !
$end
#5000
1"
#10000
0+
0"
0$
#15000
1"
#20000
1+
0)
1'
0"
1#
b1111 !
b1111 %
#25000
1"
#30000
0+
0'
0"
0#
#35000
1"
#40000
1)
0"
1#
b1000 !
b1000 %
#45000
1"
#50000
0"
#55000
1"
#60000
0"
#65000
1"
#70000
0"
#75000
1"
#80000
0"
#85000
1"
#90000
0"
